name: Build Check

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  build_ubuntu:
    name: ubuntu-latest} build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Create build folder
        run: mkdir -p build

      - name: Cache build folder
        id: cache-build
        uses: actions/cache@v3
        env:
          cache-name: cache-build-folder
        with:
          path: |
            ./build
            /home/runner/.conan
          key: ${{ runner.os }}-build-${{ env.cache-name }}_${{ hashFiles('./Sources/*') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}_${{ hashFiles('./Sources/*') }}

      - name: Install conan
        run: |
          pip3 install conan --upgrade

      - name: Configure conan
        run: |
          apt-get update && apt-get install -y libudev-dev
          conan profile new --detect default
          conan profile update settings.compiler.libcxx=libstdc++11 default

      - name: Install conan libs
        run: |
          conan install --build=missing ..
        working-directory: ./build

      - name: Build project
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" .. && cmake --build .
        working-directory: ./build

  build_windows:
    name: windows-latest build
    runs-on: windows-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Create build folder
        run: mkdir -p build

      - name: Cache build folder
        id: cache-build
        uses: actions/cache@v3
        env:
          cache-name: cache-build-folder
        with:
          path: |
            build
            \home\runner\.conan
          key: ${{ runner.os }}-build-${{ env.cache-name }}_${{ hashFiles('./Sources/*') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}_${{ hashFiles('./Sources/*') }}

      - name: Install conan
        run: |
          pip3 install conan --upgrade

      - name: Install conan libs
        run: |
          conan install --build=missing ..
        working-directory: ./build

      - name: Build project
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release .. && cmake --build .
        working-directory: ./build